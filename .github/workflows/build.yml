name: Build

on:

  schedule:
    - cron: '0 1 * * 1'

  push:

    branches:
      - master
      - dev
      - feature/*
      - dev/*
      - fix/*

  pull_request:

  workflow_dispatch:
    
jobs:

  Windows:
    
    runs-on: windows-2019

    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Retrieve submodules
      run: git submodule update --init --recursive

    - name: Install Dependencies
      run: |
        Invoke-WebRequest -Uri "https://sdk.lunarg.com/sdk/download/1.3.224.1/windows/VulkanSDK-1.3.224.1-Installer.exe" -OutFile VulkanSDK.exe
        ./VulkanSDK.exe --accept-licenses --default-answer --confirm-command install
        
    - name: Build Pilot Light
      shell: cmd
      run: |
        set VULKAN_SDK=C:\VulkanSDK\1.3.224.1
        cd $GITHUB_WORKSPACE
        cd scripts
        python gen_build.py
        cd ../src
        call build.bat
        if not exist ../out/pilot_light.exe exit 1
        if not exist ../out/app.dll exit 1
        if not exist ../out/pl_graphics_ext.dll exit 1
        if not exist ../out/pl_image_ext.dll exit 1
        if not exist ../out/pl_stats_ext.dll exit 1
        if not exist ../out/pl_debug_ext.dll exit 1
        if not exist ../out/pl_resource_ext.dll exit 1
        if not exist ../out/pl_ecs_ext.dll exit 1
        if not exist ../out/pl_ref_renderer_ext.dll exit 1
        if not exist ../out/pilotlight.lib exit 1

    - name: Package Pilot Light
      shell: cmd
      run: |
        cd $GITHUB_WORKSPACE
        cd scripts
        python package.py

    - name: Upload Pilot Light
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: pilotlight_release
        path: D:\a\pilotlight\pilotlight\out\pilotlight_win32.zip

  MacOS:
    
    runs-on: macos-14

    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Retrieve submodules
      run: git submodule update --init --recursive
    
    - name: Build Pilot Light
      run: |
        cd $GITHUB_WORKSPACE
        cd scripts
        python3 gen_build.py
        cd ../src
        chmod +x build.sh
        ./build.sh
        cd ..
        cd out
        chmod +x pilot_light
        cd ..
        test -f ./out/pilot_light || exit 1
        test -f ./out/app.dylib || exit 1
        test -f ./out/pl_stats_ext.dylib || exit 1
        test -f ./out/pl_image_ext.dylib || exit 1
        test -f ./out/pl_debug_ext.dylib || exit 1
        test -f ./out/pl_graphics_ext.dylib || exit 1
        test -f ./out/pl_resource_ext.dylib || exit 1
        test -f ./out/pl_ecs_ext.dylib || exit 1
        test -f ./out/pl_ref_renderer_ext.dylib || exit 1
        test -f ./out/pilotlight.a || exit 1

    - name: Package Pilot Light
      run: |
        cd $GITHUB_WORKSPACE
        cd scripts
        python3 package.py

    - name: Upload Pilot Light
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: pilotlight_release
        path: /Users/runner/work/pilotlight/pilotlight/out/pilotlight_macos.zip

  Ubuntu:
    
    runs-on: ubuntu-20.04

    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Retrieve submodules
      run: git submodule update --init --recursive

    - name: Install Dependencies
      run: |
        wget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
        sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-1.3.224-focal.list https://packages.lunarg.com/vulkan/1.3.224/lunarg-vulkan-1.3.224-focal.list
        sudo apt update
        sudo apt install vulkan-sdk
        sudo apt install libx11-dev
        sudo apt install libxkbcommon-x11-dev
        sudo apt install libx11-xcb-dev
        sudo apt install libxcb-xfixes0-dev
        sudo apt install libxcb-cursor-dev
        sudo apt install libxcb-cursor0
        sudo apt install libxcb-keysyms1-dev

    - name: Build Pilot Light
      run: |
        cd $GITHUB_WORKSPACE
        cd scripts
        python3 gen_build.py
        cd ../src
        chmod +x build.sh
        ./build.sh
        cd ..
        cd out
        chmod +x pilot_light
        cd ..
        test -f ./out/pilot_light || exit 1
        test -f ./out/app.so || exit 1
        test -f ./out/pl_graphics_ext.so || exit 1
        test -f ./out/pl_image_ext.so || exit 1
        test -f ./out/pl_stats_ext.so || exit 1
        test -f ./out/pl_debug_ext.so || exit 1
        test -f ./out/pl_resource_ext.so || exit 1
        test -f ./out/pl_ecs_ext.so || exit 1
        test -f ./out/pl_ref_renderer_ext.so || exit 1
        test -f ./out/pilotlight.a || exit 1

    - name: Package Pilot Light
      run: |
        cd $GITHUB_WORKSPACE
        cd scripts
        python3 package.py
        pwd

    - name: Upload Pilot Light
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: pilotlight_release
        path: /home/runner/work/pilotlight/pilotlight/out/pilotlight_linux_amd64.zip
